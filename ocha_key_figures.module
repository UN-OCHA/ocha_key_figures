<?php

/**
 * @file
 * Themes and preprocessors for the paragraphs page title module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\ocha_key_figures\Controller\BaseKeyFiguresController;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_theme().
 */
function ocha_key_figures_theme($existing, $type, $theme, $path) {
  return [
    'ocha_key_figures_extended_figure_list' => [
      'variables' => [
        'attributes' => NULL,
        'view_all' => NULL,
        'view_all_info' => NULL,
        'figures' => NULL,
      ],
    ],
    'ocha_key_figures_extended_figure' => [
      'variables' => [
        'attributes' => NULL,
        'figure' => NULL,
        'jsonld' => NULL,
      ],
    ],

    'ocha_key_figures_figure_list' => [
      'variables' => [
        'attributes' => NULL,
        'figures' => NULL,
      ],
    ],
    'ocha_key_figures_figure' => [
      'variables' => [
        'attributes' => NULL,
        'label_attributes' => NULL,
        'value_attributes' => NULL,
        'unit_attributes' => NULL,
        'label' => NULL,
        'value' => NULL,
        'unit' => NULL,
        'country' => NULL,
        'year' => NULL,
      ],
    ],

  ];
}

/**
 * Metadata by type.
 */
function ocha_key_figures_metadata_by_type(string $bundle) {
  switch ($bundle) {
    case 'fts_key_figures':
      return [
        'publisher' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'OCHA Contribution Tracking (OCT)',
        ],
        'creator' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'OCHA Contribution Tracking (OCT)',
        ],
        'license' => [
          '@type' => 'CreativeWork',
          'name' => 'Creative Commons Attribution for Intergovernmental Organisations',
          'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_for_Intergovernmental_Organisations__CC_BY_IGO_-a',
        ],
      ];

    case 'fts_key_figures':
      return [
        'publisher' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'OCHA Financial Tracking System (FTS)',
        ],
        'creator' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'OCHA Financial Tracking System (FTS)',
        ],
        'license' => [
          '@type' => 'CreativeWork',
          'name' => 'Creative Commons Attribution for Intergovernmental Organisations',
          'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_for_Intergovernmental_Organisations__CC_BY_IGO_-a',
        ],
      ];

    case 'reliefweb_key_figures':
      return [
        'publisher' => [
          '@type' => 'Organization',
          'name' => 'ReliefWeb',
        ],
        'creator' => [
          '@type' => 'Organization',
          'name' => 'ReliefWeb',
        ],
        'license' => [
          '@type' => 'CreativeWork',
          'name' => 'Creative Commons Attribution for Intergovernmental Organisations',
          'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_for_Intergovernmental_Organisations__CC_BY_IGO_-a',
        ],
      ];

    case 'inform_key_figures':
      return [
        'publisher' => [
          '@type' => 'Organization',
          'name' => 'ACAPS',
        ],
        'creator' => [
          '@type' => 'Organization',
          'name' => 'ACAPS',
        ],
        'license' => [
          '@type' => 'CreativeWork',
          'name' => 'Creative Commons Attribution International',
          'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_International_CC_BY_-a',
        ],
      ];

    case 'cbpf_key_figures':
    case 'cerf_key_figures':
      return [
        'publisher' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'United Nations Office for the Coordination of Humanitarian Affairs',
        ],
        'creator' => [
          '@type' => 'Organization',
          'sameAs' => 'https://ror.org/00aahzn97',
          'name' => 'United Nations Office for the Coordination of Humanitarian Affairs',
        ],
        'license' => [
          '@type' => 'CreativeWork',
          'name' => 'Creative Commons Attribution International',
          'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_International_CC_BY_-a',
        ],
      ];

  }

  // Default to OCHA.
  return [
    'publisher' => [
      '@type' => 'Organization',
      'sameAs' => 'https://ror.org/00aahzn97',
      'name' => 'United Nations Office for the Coordination of Humanitarian Affairs',
    ],
    'creator' => [
      '@type' => 'Organization',
      'sameAs' => 'https://ror.org/00aahzn97',
      'name' => 'United Nations Office for the Coordination of Humanitarian Affairs',
    ],
    'license' => [
      '@type' => 'CreativeWork',
      'name' => 'Creative Commons Attribution International',
      'url' => 'https://data.humdata.org/faqs/licenses#auto-faq-_Data_Licenses_Content_-Creative_Commons_Attribution_International_CC_BY_-a',
    ],
  ];
}

/**
 * Add json ld data.
 */
function ocha_key_figures_add_jsonld_data($metadata, $data) {
  $label_column = [];
  $value_column = [];
  $keywords = [];

  // Default keyword.
  $keywords[] = 'ReliefWeb > Numbers > ' . $metadata['spatialCoverage'] . ' > ' . $metadata['short_name'];

  foreach ($data as $label => $value) {
    $label_column[] = [
      'csvw:value' => $label,
      'csvw:primaryKey' => $label,
    ];

    $value_column[] = [
      'csvw:value' => $value,
      'csvw:primaryKey' => $value,
    ];

    $keywords[] = 'ReliefWeb > Numbers > ' . $metadata['spatialCoverage'] . ' > ' . $metadata['short_name'] . ' > ' . $label;
  }

  $json_ld = [
    '@context' => [
      'https://schema.org',
      [
        'csvw' => 'http://www.w3.org/ns/csvw#',
      ],
    ],
    '@type' => 'Dataset',
    'keywords' => $keywords,
    'isAccessibleForFree' => TRUE,
    'mainEntity' => [
      '@type' => 'csvw:Table',
      'csvw:tableSchema' => [
        'csvw:columns' => [
          [
            'csvw:name' => 'Label',
            'csvw:datatype' => 'string',
            'csvw:cells' => $label_column,
          ],
          [
            'csvw:name' => 'Value',
            'csvw:datatype' => 'number',
            'csvw:cells' => $value_column,
          ],
        ],
      ],
    ],
  ] + $metadata;

  return json_encode($json_ld);
}

/**
 * Returns the maximum age (in seconds) for cached OCHA key figures.
 *
 * If the 'max_age' setting is defined in the OCHA key figures configuration,
 * this value is returned. Otherwise, a default value of 12 hours is used.
 *
 * @return int
 *   The maximum age for cached OCHA key figures.
 */
function ocha_key_figures_get_max_age() {
  if ($max_age = \Drupal::config('ocha_key_figures.settings')->get('max_age')) {
    return $max_age;
  }

  return 12 * 60 * 60;
}

/**
 * Move to webhook.
 */
function testCacheInvalidation() {
  $map = \Drupal::service('entity_field.manager')->getFieldMapByFieldType('key_figure');

  $records = [
    'fts_AFG_2023_funding_coverage' => [
      "label" => "Funding coverage",
      "value" => "0.23",
      "unit" => "%",
      "provider" => "fts",
      "id" => "fts_AFG_2023_funding_coverage",
      "country" => "afg",
      "year" => "2023",
    ]
  ];

  $type_ids = [];
  foreach ($records as $figure_id => $record) {
    foreach ($map as $type => $info) {
      $type_ids[$type] = [];
      foreach ($info as $name => $data) {
        $query = \Drupal::entityTypeManager()->getStorage($type)->getQuery();
        $query->condition($name . '.id', $figure_id);
        $result = $query->execute();
        $type_ids[$type] = array_merge($type_ids[$type], array_values($result));
      }
    }
  }

  foreach ($type_ids as $type => $ids) {
    $info = $map[$type];
    $entities = \Drupal::entityTypeManager()->getStorage($type)->loadMultiple($ids);
    foreach ($entities as $entity) {
      // Loop all fields of entity.
      foreach ($info as $name => $data) {
        if ($entity->hasField($name)) {
          $field_data = $entity->get($name)->getValue();
          foreach ($field_data as &$row) {
            if (array_key_exists($row['id'], $records)) {
              $row['value'] = $records[$row['id']]['value'];
              $row['unit'] = $records[$row['id']]['unit'] ?? '';
            }
          }
          $entity->get($name)->setValue($field_data);
        }
      }
      $entity->save();
      \Drupal\Core\Cache\Cache::invalidateTags($entity->getCacheTagsToInvalidate());
    }
  }

  return;
}
